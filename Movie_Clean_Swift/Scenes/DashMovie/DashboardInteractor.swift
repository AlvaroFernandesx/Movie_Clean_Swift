//
//  DashboardInteractor.swift
//  Movie_Clean_Swift
//
//  Created by Álvaro Fernandes on 15/01/20.
//  Copyright (c) 2020 Álvaro Fernandes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PromiseKit

protocol DashboardBusinessLogic {
    func load()
    func numberOfSections()
}

protocol DashboardDataStore {
  //var name: String { get set }
}

class DashboardInteractor: DashboardBusinessLogic, DashboardDataStore {
    func numberOfSections() {
        
    }
    
    
    var presenter: DashboardPresentationLogic?
    var worker: DashboardWorker?
    var sections: [MovieApi]?
    
    init(worker: DashboardWorker = DashboardWorker()) {
      self.worker = worker
    }
    
    func load() {
       
        let new =  (worker?.getMovies(HomeNewMovieProvider()))!
        let popular =  (worker?.getMovies(HomePopularMovieProvider()))!
        
        when(fulfilled: new, popular).done(handleSuccess).catch(handleError)
    }

    private func handleSuccess(_ new: HomeMovieModels.MovieApiResponse, _ popular: HomeMovieModels.MovieApiResponse) {
//        presenter?.mapResponse(topRepoResponse, lastUpdatedResponse)
    }

    private func handleError(_ error: Error) {
//        presenter?.presentTryAgain(message: (error as? RequestError)?.localizedDescription ?? "")
    }

    func repositorySelected(_ repository: MovieApi?) {
//        selectedRepository = repository
//        presenter?.presentDetail()
    }

    func topRepoListSelected(_ repositories: [MovieApi], title: String) {
//        listRepositories = repositories
//        listFilter = .stars
//        listTitle = title
//        presenter?.presentList()
    }

    func lastUpdatedListSelected(_ repositories: [MovieApi], title: String) {
//        listRepositories = repositories
//        listFilter = .updated
//        listTitle = title
//        presenter?.presentList()
    }

    
}
