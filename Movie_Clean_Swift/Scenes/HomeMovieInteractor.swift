//
//  HomeMovieInteractor.swift
//  Movie_Clean_Swift
//
//  Created by Álvaro Fernandes on 30/12/19.
//  Copyright (c) 2019 Álvaro Fernandes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeMovieBusinessLogic {
    func load()
    func cellForRow(at index: Int) -> HomeMovieModels.ViewModel?
    var numberOfRows: Int { get }
}

protocol HomeMovieDataStore {
    
}

class HomeMovieInteractor: HomeMovieBusinessLogic, HomeMovieDataStore {
    
    var presenter: HomeMoviePresentationLogic?
    var worker: HomeMovieWorker?
    var movies = [HomeMovieModels.Movie]()
    
    init(worker: HomeMovieWorker = HomeMovieWorker()) {
      self.worker = worker
    }
    
    func load() {
        worker?.getData(movieApi: MovieApi.newMovies, page: 1).done(handleRequestSuccess).catch(handleRequestFailure)
    }
    
    var numberOfRows: Int {
       return movies.count
    }
    
    func cellForRow(at index: Int) -> HomeMovieModels.ViewModel? {
        guard index >= 0 && index < numberOfRows else { return nil }
        let movie = movies[index]
        return HomeMovieModels.ViewModel(movie: movie)
    }
    
    private func handleRequestSuccess(_ response: HomeMovieModels.MovieApiResponse) {
        self.movies.append(contentsOf: response.movies)
        presenter?.reloadTableView()
    }
    
    private func handleRequestFailure(_ error: Error) {
//        presenter?.presentError(error)
    }

    
}
